/**
 * –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö —Ä–æ–ª–µ–π - –ø—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
 */

import { ROLE_TEAMS, NIGHT_ORDER } from '../utils/constants.js'
import { RoleAbilities } from './abilities/RoleAbilities.js'

export class BaseRole {
  constructor(id, config = {}) {
    this.id = id
    this.name = config.name || id
    this.description = config.description || ''
    this.team = config.team || ROLE_TEAMS.VILLAGE
    this.color = config.color || 'blue'
    this.hasNightAction = config.hasNightAction || false
    this.nightOrder = config.nightOrder || NIGHT_ORDER[id.toUpperCase()] || 999
    this.implemented = config.implemented !== false
    this.phaseHints = config.phaseHints || {}
  }
  
  /**
   * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–æ—á–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è - –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–∞—Ö
   */
  async executeNightAction(game, player, action = null) {
    if (!this.hasNightAction) {
      return RoleAbilities.skipAction(game, player.id, '–£ —Ä–æ–ª–∏ –Ω–µ—Ç –Ω–æ—á–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è')
    }
    
    // –ï—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –∏ —Ä–æ–ª—å –º–æ–∂–µ—Ç –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
    if (!action) {
      return this.handleAutoAction(game, player)
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–∂–µ—Ç –ª–∏ –∏–≥—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ
    if (!RoleAbilities.canPerformAction(game, player.id, action.type)) {
      return RoleAbilities.skipAction(game, player.id, '–î–µ–π—Å—Ç–≤–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ')
    }
    
    throw new Error(`Night action not implemented for role: ${this.id}`)
  }
  
  /**
   * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–µ –≤—ã–±—Ä–∞–ª
   */
  async handleAutoAction(game, player) {
    return RoleAbilities.skipAction(game, player.id, '–ò–≥—Ä–æ–∫ –Ω–µ –≤—ã–±—Ä–∞–ª –¥–µ–π—Å—Ç–≤–∏–µ')
  }
  
  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–æ—á–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
   */
  validateNightAction(game, player, action) {
    if (!this.hasNightAction) {
      return { valid: false, error: '–£ —ç—Ç–æ–π —Ä–æ–ª–∏ –Ω–µ—Ç –Ω–æ—á–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è' }
    }
    
    if (!player.alive) {
      return { valid: false, error: '–ú–µ—Ä—Ç–≤—ã–µ –∏–≥—Ä–æ–∫–∏ –Ω–µ –º–æ–≥—É—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å' }
    }
    
    if (game.state.phase !== 'night') {
      return { valid: false, error: '–î–µ–π—Å—Ç–≤–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–æ—á—å—é' }
    }
    
    return { valid: true }
  }
  
  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ü–µ–ª–µ–π –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è
   */
  getAvailableTargets(game, player) {
    if (!this.hasNightAction) return []
    return RoleAbilities.getValidTargets(game, player.id)
  }
  
  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è UI
   */
  getActionChoices(game, player) {
    return []
  }
  
  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–∂–µ—Ç –ª–∏ —Ä–æ–ª—å –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ
   */
  canSkipAction() {
    return true // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ —Ä–æ–ª–∏ –º–æ–≥—É—Ç –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å
  }
  
  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–æ–ª–∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
   */
  getClientInfo() {
    return {
      id: this.id,
      name: this.name,
      description: this.description,
      team: this.team,
      color: this.color,
      hasNightAction: this.hasNightAction,
      implemented: this.implemented,
      phaseHints: this.phaseHints,
      canSkip: this.canSkipAction()
    }
  }
  
  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è —Ñ–∞–∑—ã
   */
  getPhaseHint(phase) {
    return this.phaseHints[phase] || ''
  }
  
  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥
   */
  isTeam(team) {
    return this.team === team
  }
  
  isWerewolf() {
    return this.team === ROLE_TEAMS.WEREWOLF
  }
  
  isVillager() {
    return this.team === ROLE_TEAMS.VILLAGE
  }
  
  isTanner() {
    return this.team === ROLE_TEAMS.TANNER
  }
  
  /**
   * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞
   */
  notifyPlayer(game, playerId, message) {
    game.room.sendToPlayer(playerId, 'role-action-result', {
      message,
      timestamp: Date.now()
    })
  }
  
  /**
   * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
   */
  logAction(player, action, details = '') {
    console.log(`üé≠ ${this.name} (${player.name}): ${action}${details ? ' - ' + details : ''}`)
  }
}